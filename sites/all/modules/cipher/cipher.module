<?php
// date_default_timezone_set('America/New_York');

function cipher_menu() {
    $items = array();
    $items['cipher'] = array(
        'title' => 'Custom Shift Cipher Module',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('input_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['cipher_result_page'] = array(
        'title' => 'Check Out the Encrypted Phrase!',
        'page callback' => 'display_result',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function input_form() {
    $form['shift_value'] = array(
        '#type' => 'textfield',
        '#title' => 'Shift value',
        '#description' => 'A shift value is the number of places to shift each letter over.',
        '#element_validate' => array('element_validate_integer_positive'),
        '#required' => TRUE,
        '#attributes' => array(
            'placeholder' => t('Enter a number'),
        ),

    );
    $form['shift_direction'] = array(
        '#type' => 'textfield',
        '#title' => 'Shift direction',
        '#description' => 'Ex: "Right" or "Left".',
        '#element_validate' => array('element_validate_direction'),
        // http://php.net/manual/en/function.ctype-alpha.php
        '#required' => TRUE,
        '#attributes' => array(
            'placeholder' => t('Enter a shift direction'),
        ),
    );
    $form['input_phrase'] = array(
        '#type' => 'textfield',
        '#title' => 'Phrase',
        '#required' => TRUE,
        '#element_validate' => array('element_validate_phrase'),
        '#attributes' => array(
            'placeholder' => t('Enter a phrase to encrypt'),
        ),
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Encrypt!',
    );

    return $form;
}

function encrypt_phrase($input_shift, $input_direction, $input_split_phrase) {
    $encrypted_phrase = array();

    if ($input_shift === 'RIGHT') {
        foreach($input_split_phrase as $char) {
            if(regular expression a-z) {
                $new_ascii = ord($char) + $shift
                if($new_ascii > 122) {
                    implement a wrap around;
                } else (
                    push the $new_ascii to encrypted_phrase array;
                )
            } else {
                push this $char to array;
            }
            return $encrypted_phrase;
        }
    } else { // handle LEFT

    }
}

function input_form_submit($form, &$form_state) {
    $shift_value = (int)$form_state['values']['shift_value'];
    $shift_direction = strtoupper($form_state['values']['shift_direction']);
    $phrase = strtolower(($form_state['values']['input_phrase']));
    $split_phrase = str_split($phrase);
    $user_input = array($shift_value, $shift_direction, $phrase);

    $result = encrypt_phrase($shift_value, $shift_direction, $split_phrase);


    $_SESSION['user_input'] = $user_input;
    $form_state['redirect'] = 'cipher_result_page';
}

function display_result() {
    $shift_value = $_SESSION['user_input'][0];
    $shift_direction = $_SESSION['user_input'][1];
    $phrase = $_SESSION['user_input'][2];

    // temporary test display
    return  '<h3>Shift Value: </h3>' . $shift_value .
            '<h3>Shift Direction: </h3>' . $shift_direction .
            '<h3>Phrase: </h3>' . $phrase;

}

// ============================= Form Validation ============================= //

function element_validate_direction($element) {
    $input_direction = strtoupper($element['#value']);
    $valid_directions = array('RIGHT', 'LEFT');

    // ** need to improve because it is not yet one hundred percent effective **
    if (!in_array($input_direction, $valid_directions, TRUE)) {
        form_error($element, t('Direction must either be "Left" or "Right".'));
    }
}

function element_validate_phrase($element) {
    $valid = '/^[[:alpha:](.|,|;|:|?|!|"|\'|\s)]+$/i'; //tested on regex101.com

    if (!preg_match($valid, $element['#value'])) {
        form_error($element, t('The only special characters permitted are spaces and punctuation.'));
    }

}

// echo '<pre>';
// var_dump($thing_of_interest);
// echo '</pre>';
// exit;
